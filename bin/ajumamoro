#!/usr/bin/env php
<?php

require "vendor/autoload.php";

use clearice\ClearIce;
use ntentan\logger\Logger;use ajumamoro\Configuration;

//set_include_path(get_include_path() . PATH_SEPARATOR . __DIR__ . '/../src' . PATH_SEPARATOR . __DIR__ . '/../src/stores');
//spl_autoload_register('class_loader');


error_reporting(E_ALL ^ E_NOTICE);
$cli = new ClearIce();

ClearIce::addCommands(
    array(
        'command' => 'start',
        'help' => 'start ajumamoro as a daemon',
        'class' => '\\ajumamoro\\commands\\Start'
    ),
    array(
        'command' => 'stop',
        'help' => 'stop the ajumamoro daemon',
        'class' => '\\ajumamoro\\commands\\Stop'
    ),
    array(
        'command' => 'status',
        'help' => 'display the status of the ajumamoro daemon',
        'class' => '\\ajumamoro\\commands\\Status'
    )
);

ClearIce::addOptions(
    array(
        'short' => 's',
        'long' => 'store',
        'help' => 'specify the backend to be used for storing job tasks. Supported backends: redis, postgresql, mysql and sqlite',
        'has_value' => true,
        'value' => 'STORE',
        'command' => 'start'
    ),
    array(
        'short' => 'l',
        'long' => 'load-class-files',
        'help' => 'forces ajumamoro to load php files of the job classes. By default ajumamoro depends on the autoloader to handle the loading of class files.',
        'command' => 'start'
    ),
    array(
        'short' => 'h',
        'long' => 'host',
        'help' => 'hostname of the storage backend server',
        'has_value' => true,
        'value' => 'HOST',
        'command' => 'start'
    ),
    array(
        'short' => 'u',
        'long' => 'user',
        'help' => 'username to access the storage backend server',
        'has_value' => true,
        'value' => 'USERNAME',
        'command' => 'start'
    ),
    array(
        'short' => 'n',
        'long' => 'name',
        'help' => 'name of the database on the server',
        'has_value' => true,
        'value' => 'DBNAME',
        'command' => 'start'
    ),
    array(
        'short' => 'd',
        'long' => 'daemon',
        'help' => 'run the process as a daemon',
        'command' => 'start'
    ),
    array(
        'short' => 'c',
        'long' => 'config',
        'help' => 'a path to the configuration file for ajumamoro',
        'value' => 'PATH',
        'has_value' => true
    )
);

ClearIce::addHelp();
ClearIce::setStrict(true);
ClearIce::setDescription("Ajumamoro is a tool for running background tasks in PHP apps.");
ClearIce::setUsage("[command] [options]");

try{
    $arguments = ClearIce::parse();
}
catch(\Exception $e)
{
    \ajumamoro\Ajumamoro::logException($e);
    die();
}

if(count($arguments) === 0){
    echo ClearIce::getHelpMessage();
    die();
}

// Fork and start running as a daemon
/*if($arguments['daemon'] === true)
{
    $pid = pcntl_fork();
    if($pid == -1)
    {
        fputs(STDERR, "Could not start daemon.\n");
    }
    else if($pid)
    {
        return;
    }
    else
    {
        main_loop($arguments);
    }
}
else
{
    main_loop($arguments);
}

/*function class_loader($class)
{
    @include_once str_replace(array("ajumamoro\\", '\\'), array("", "/"), $class) . '.php';
}*/